@model snn.cc_Conference
<h1>
    @ViewData["title"]
</h1>

@Html.Raw(TempData["msgBox"])

<form asp-action="saveevent" method="post">
    <div class="form-group row">
        <div class="col-sm-6">
            Create time: <label>@Model.create_time</label>
        </div>
        <div class="col-sm-6">
            Update time: <label>@Model.update_time</label>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-6">
            <label>Title</label>
            <input type="text" asp-for="title" class="form-control" />
        </div>
        <div class="col-sm-3">
            <label>Start</label>
            <input type="date" asp-for="start" class="form-control" />
        </div>
        <div class="col-sm-3">
            <label>End</label>
            <input type="date" asp-for="end" class="form-control" />
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-4">
            <label>CI Company</label>
            <select asp-for="ci_Company" asp-items="ViewBag.companies" class="form-control">
                <option value="0" selected>Select Company</option>
            </select>
        </div>
        <div class="col-sm-4">
            <label>Slug</label>
            <input type="text" asp-for="slug" class="form-control" />
        </div>
        <div class="col-sm-4">
            <label>Status</label>
            <select asp-for="ref_Status" asp-items="ViewBag.status" class="form-control">
                <option value="0" selected>Select Status</option>
            </select>
        </div>
    </div>
    <div class="form-group">
        <label>SRC</label>
        <input type="url" asp-for="src" class="form-control" />
    </div>
    <div class="form-group">
        <label>Branding</label>
        <textarea asp-for="branding" rows="7" class="form-control"></textarea>
    </div>
    <div class="form-group">
        <label>Location</label>
        <input type="text" asp-for="location" class="form-control" />
    </div>
    <div class="form-group">
        <label>Industry</label>
        <select asp-for="industry" asp-items="ViewBag.industries" class="form-control">
            <option value="0" selected>Select industry</option>
        </select>
    </div>
    <div class="form-group">
        <label>Region</label>
        <input type="text" asp-for="region" class="form-control" />
    </div>
    <div class="form-group">
        <label>Host</label>
        <input type="text" asp-for="host" class="form-control" />
    </div>
    <input type="hidden" asp-for="id" />
    <input type="hidden" asp-for="create_time" />
    <div class="border-top border-bottom py-2 mt-3">
        <div class="row">
            <div class="col">
                <a class="btn-outline-secondary btn" href='@Url.Action("index")'>Back</a>
            </div>
            <div class="col text-right">
                <button class="btn-primary btn" type="submit">Save</button>
            </div>
        </div>
    </div>
</form>
<script>
import { async } from "q";

    $(function () {
        getCompanies();
    });

    async function getCompanies() {
        var companies = [];
        if (localStorage.getItem("companies")) {
            let cachedData = JSON.parse(localStorage.getItem("companies"));
            if (cachedData.updated < (new Date().getTime()) - 1000) {
                companies = await loadCompanies();
            }
        } else {
            companies = await loadCompanies();
        }
        new Vue({
            el: "#companies",
            data: {
                companies: companies,
                keywords: ""
            },
            computed: {
                displayList: function () {
                    if (this.keywords != "") {
                        return this.companies.filter(c => c.name.toLowerCase().includes(this.keywords.toLowerCase()));
                    }
                    return [];
                }
            },
            methods: {

            }
        })
    }

    async function loadCompanies() {
        let res = await (await net3000.common.handlePromise({
            apiurl: "/admin/companies"
        })).json();
        if (res.success) {
            localStorage.setItem("companies", JSON.stringify({ updated: new Date().getTime(), companies: res.companies }));
        }
        return res.companies
    }
</script>